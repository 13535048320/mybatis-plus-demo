server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/test?characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    dbcp2:
      #连接池配置，继承spring.datasource.* 配置，相同则覆盖。
      #强烈注意：Spring Boot 2.X 版本不再支持配置继承，多数据源的话每个数据源的所有配置都需要单独配置，否则配置不会生效。
      #初始化时建立物理连接的个数。
      initialSize: 1
      #最小连接池数量：连接池中容许保持空闲状态的最小连接数量，低于这个数量将创建新的连接，如果设置为0则不创建。
      minIdle: 1
      #最大连接池数量，设 0 为没有限制。
      maxActive: 40
      #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      maxWait: 60000
      #1)检测连接的间隔时间，单位是毫秒；2) testWhileIdle的判断依据。
      timeBetweenEvictionRunsMillis: 3600000
      #连接保持空闲而不被驱逐的最小时间
      minEvictableIdleTimeMillis: 300000
      #用来检测连接是否有效的sql，要求是一个查询语句。若为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validationQuery: SELECT 'x'
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testWhileIdle: true
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      testOnBorrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      testOnReturn: false
      #是否开启缓存preparedStatement（PSCache）。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      poolPreparedStatements: false
      #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      #maxPoolPreparedStatementPerConnectionSize: 20


mybatis-plus:
  #指明mapper.xml扫描位置(classpath* 代表编译后类文件根目录)
  mapper-locations: classpath*:/com/example/mybatisplugdemo/module/**/mapper/**Mapper.xml
  #指明实体扫描(多个package用逗号或者分号分隔)
  typeAliasesPackage: com.example.mybatisplugdemo.module.system.model
    # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: UUID
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      table-underline: true
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    cache-enabled: false
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    #    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    #    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 解决oracle更新数据为null时无法转换报错，mysql不会出现此情况
    jdbc-type-for-null: 'null'
